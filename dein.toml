[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = 'make'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'ErichDonGubler/vim-sublime-monokai'
hook_add = '''
    let g:sublimemonokai_term_italic=0
    autocmd VimEnter * nested colorscheme sublimemonokai
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-neosnippet.vim'
hook_add='''
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo='prabirshrestha/vim-lsp'
hook_add='''
    if executable('clangd')
        au User lsp_setup call lsp#register_server({
            \ 'name': 'clangd',
            \ 'cmd': {server_info->['clangd']},
            \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
            \ })
    endif

    let g:lsp_signs_enabled = 1         " enable signs
    let g:lsp_diagnostics_echo_cursor = 1 " enable echo under cursor when in normal mode
    let g:lsp_signs_error = {'text': '✗'}
    let g:lsp_signs_warning = {'text': '‼'}
    let g:asyncomplete_completion_delay=10
'''

[[plugins]]
repo='Yggdroot/indentLine'
hook_add='''
let g:indentLine_char='|'
'''
